@page "/fetchdata"
@using GuitarShop.Shared
@inject HttpClient HttpClient

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Description</th>
                <th>ImageUrl</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Category Id</th>
                <th>SubCategory Id</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.ImageUrl</td>
                    <td>@product.Quantity</td>
                    <td>@product.Price</td>
                    <td>@product.CategoryId</td>
                    <td>@product.SubCategoryId</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Product[]? products;//The ? indicates that the array can be nullable

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("ok");
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        using (var httpClient = new HttpClient())
        {
            var response = await httpClient.GetAsync("https://localhost:7237/api/product");

            if (response.IsSuccessStatusCode)
            {
                products = await response.Content.ReadFromJsonAsync<Product[]>();
            }
            else
            {
                Console.WriteLine($"Error : {response.StatusCode}");
            }
        }
    }
}
